<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.StockCheckMode="False" this:Main.WhatToExtract="Price" this:Main.DisablePushNotifications="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:c="clr-namespace:Change_Monitor_Library;assembly=Change Monitor Library" xmlns:c1="clr-namespace:Change_Monitor_Performer;assembly=DataService.Change_Monitor_Performer" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Name of the brand and product (e.g. Hula Hoops, Heinz Baked Beans). Do not include variants here such as 6x pack and 12x pack. The variant will be extracted from the product URL provided." Name="Product" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="If set to true, checks that would normally result in an ERROR result in a notification sent to the Stock Check Alert pushover group" Name="StockCheckMode" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="URL of a specific product to check" Name="ProductURL" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="The type of data to be extracted from the URL. Should be one of the following:&#xA;- Price&#xA;- PricePerUnit&#xA;- General" Name="WhatToExtract" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Parameter used for automated testing. Should be TRUE in testing" Name="DisablePushNotifications" Type="InArgument(x:Boolean)" />
    <x:Property Name="ApiKey" Type="InArgument(x:String)" />
    <x:Property Name="SearchTerm1" Type="InArgument(x:String)" />
    <x:Property Name="SearchTerm2" Type="InArgument(x:String)" />
    <x:Property Name="SearchTerm3" Type="InArgument(x:String)" />
    <x:Property Name="TextAnchor1" Type="InArgument(x:String)" />
    <x:Property Name="TextAnchor2" Type="InArgument(x:String)" />
    <x:Property Name="TextAnchor3" Type="InArgument(x:String)" />
  </x:Members>
  <this:Main.ApiKey>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Main.ApiKey>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1580,8024</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="76">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>cm</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>Change_Monitor_Library</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Change_Monitor_Performer</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="49">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>DataService.cm</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>Change Monitor Library</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>DataService.Change_Monitor_Performer</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Change Monitor" sap:VirtualizedContainerService.HintSize="1590,7959" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Variant name of a product (e.g. sunflow oil 1L, sunflower oil 3L). This value is automatically extracted from the product page." Name="ProductVariant" />
      <Variable x:TypeArguments="x:String" Name="PushoverAPIKey" />
      <Variable x:TypeArguments="x:String" Name="PushoverUserKey" />
      <Variable x:TypeArguments="x:String" Name="PushoverErrorAPIKey" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="URL of the product being checked" Name="URL" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Get Pushover API keys in order to send notifications" DisplayName="Get Pushover API Credentials" sap:VirtualizedContainerService.HintSize="1528,121" sap2010:WorkflowViewState.IdRef="Sequence_103">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[ApiKey]" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="338,181" sap2010:WorkflowViewState.IdRef="GetRobotAsset_11">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[PushoverAPIKey]</OutArgument>
        </ui:GetRobotAsset.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetRobotAsset>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="errorapikey" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="338,181" sap2010:WorkflowViewState.IdRef="GetRobotAsset_7">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[PushoverErrorAPIKey]</OutArgument>
        </ui:GetRobotAsset.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetRobotAsset>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="userkey" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="338,181" sap2010:WorkflowViewState.IdRef="GetRobotAsset_8">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[PushoverUserKey]</OutArgument>
        </ui:GetRobotAsset.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetRobotAsset>
    </Sequence>
    <Sequence DisplayName="Process Check" sap:VirtualizedContainerService.HintSize="1528,7676" sap2010:WorkflowViewState.IdRef="Sequence_85">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The last value recorded for this product" Name="OldValue" />
        <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Whether an existing record for this product exists or not (true/false)" Name="NoExistingValue" />
        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The value retrieved from the current check" Name="NewValue" />
        <Variable x:TypeArguments="c1:cmh" sap2010:Annotation.AnnotationText="The record containing the current check that will be written to the database&#xA;Type 'c1:cmh' ('clr-namespace:cm;assembly=DataService.cm') could not be resolved and was automatically replaced with 'UnknownType'" Name="NewRecord" />
        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The body of the push notification. Contains the product variant, old value, and new value." Name="PushNotificationMessage" />
        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Path to the screenshot taken during the current check" Name="ScreenshotFilepath" />
        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Push notification title if the current check is successful" Name="PushNotificationTitle" />
        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Push notification title if the current check is unsuccessful (i.e. resulted in ERROR)" Name="PushNotificationErrorTitle" />
        <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Numerical value extracted from &quot;NewValue&quot; extracted from the current check. Used for ease of sorting when data is exported by the report generator process." Name="SortValue" />
        <Variable x:TypeArguments="x:String" Name="ShopName" />
        <Variable x:TypeArguments="x:String" Name="PushNotificationResponse" />
        <Variable x:TypeArguments="x:Int32" Name="PushNotificationResponseStatus" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Get Shop Name workflow" sap:VirtualizedContainerService.HintSize="1466,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="Change Monitor Process\Get Shop Name.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_url">[ProductURL]</InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_shop">[ShopName]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_apikey">[PushoverErrorAPIKey]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_userkey">[PushoverUserKey]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <Delay sap2010:Annotation.AnnotationText="Add delay to ensure correct log ordering" DisplayName=" Delay 1 second" Duration="00:00:01" sap:VirtualizedContainerService.HintSize="1466,103" sap2010:WorkflowViewState.IdRef="Delay_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Delay>
      <ui:LogMessage sap2010:Annotation.AnnotationText="Checking Shop: &lt;...&gt;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1466,92" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="[&quot;Checking shop: &quot; + ShopName]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the last value (if any) for this monitor ID" DisplayName="Invoke Get Last Monitor Value workflow" sap:VirtualizedContainerService.HintSize="1466,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Change Monitor Process\Get Last Monitor Value.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_id">[Product]</InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_value">[OldValue]</OutArgument>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_novalue">[NoExistingValue]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_shop">[ShopName]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_url">[ProductURL]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:LogMessage sap2010:Annotation.AnnotationText="Last Value: &lt;...&gt;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1466,92" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Last Value: &quot; + OldValue]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <Delay sap2010:Annotation.AnnotationText="Add delay to ensure correct log ordering" DisplayName=" Delay 1 second" Duration="00:00:01" sap:VirtualizedContainerService.HintSize="1466,103" sap2010:WorkflowViewState.IdRef="Delay_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Delay>
      <TryCatch sap2010:Annotation.AnnotationText="If the process throws an exception, catch it, and set the new value as &quot;ERROR&quot;" DisplayName="Run Process" sap:VirtualizedContainerService.HintSize="1466,1030" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="400,244" sap2010:WorkflowViewState.IdRef="Sequence_60">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Check Shop workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="Change Monitor Process\Check Shop.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Shop">[ShopName]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_url">[ProductURL]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_ScreenshotFilepath">[ScreenshotFilepath]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_value">[NewValue]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_variant">[ProductVariant]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_url">[URL]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_WhatToExtract">[WhatToExtract]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SearchTerm1">[SearchTerm1]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SearchTerm2">[SearchTerm2]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SearchTerm3">[SearchTerm3]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_TextAnchor1">[TextAnchor1]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_TextAnchor2">[TextAnchor2]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_TextAnchor3">[TextAnchor3]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="503,827" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[exception.Message]" sap:VirtualizedContainerService.HintSize="497,758" sap2010:WorkflowViewState.IdRef="Switch`1_4">
                <Switch.Default>
                  <Sequence sap2010:Annotation.AnnotationText="Error due to inability to find value specified in product process, or other error source" sap:VirtualizedContainerService.HintSize="376,325" sap2010:WorkflowViewState.IdRef="Sequence_62">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Error" Message="[&quot;There was a problem reading the new value.&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[NewValue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">ERROR</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Switch.Default>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence x:Key="Shop not found" sap2010:Annotation.AnnotationText="Error handling specifically for shop name not fond in product process" sap:VirtualizedContainerService.HintSize="441,564" sap2010:WorkflowViewState.IdRef="Sequence_61">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Send Push Notification workflow" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Change Monitor Process\Send Push Notification.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_apikey">[PushoverErrorAPIKey]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_userkey">[PushoverUserKey]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_message">["Shop not found. Check that """ + ShopName + """ from ""in_Shops"" argument matches a switch case in the product process."]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_title">[Product + " / " + ShopName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_attachment" />
                      <InArgument x:TypeArguments="x:String" x:Key="in_url">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_disable">[DisablePushNotifications]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_Response">[PushNotificationResponse]</OutArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="out_ResponseStatus">[PushNotificationResponseStatus]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="379,148" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Error" Message="[&quot;Shop not found. Check that &quot;&quot;&quot; + ShopName + &quot;&quot;&quot; from &quot;&quot;in_Shops&quot;&quot; argument matches a switch case in the product process.&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[new Exception(&quot;Shop not found. Check that &quot;&quot;&quot; + ShopName + &quot;&quot;&quot; from &quot;&quot;in_Shops&quot;&quot; argument matches a switch case in the product process.&quot;)]" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_5" />
                </Sequence>
              </Switch>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <Delay sap2010:Annotation.AnnotationText="Add delay to ensure correct log ordering" DisplayName=" Delay 1 second" Duration="00:00:01" sap:VirtualizedContainerService.HintSize="1466,103" sap2010:WorkflowViewState.IdRef="Delay_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Delay>
      <ui:LogMessage sap2010:Annotation.AnnotationText="Log new value" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1466,92" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;New Value: &quot; + NewValue]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <ui:LogMessage sap2010:Annotation.AnnotationText="Log screenshot path" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1466,92" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="[&quot;Screenshot Path: &quot; + ScreenshotFilepath]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <ui:MultipleAssign sap2010:Annotation.AnnotationText="Set push notification formats" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1466,92" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[PushNotificationTitle]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[Product + Environment.NewLine + "(" + ShopName + ")"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[PushNotificationErrorTitle]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[Product + Environment.NewLine + "(" + ShopName + ")"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[PushNotificationMessage]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[ProductVariant + Environment.NewLine + "New: " + NewValue + Environment.NewLine + "Old: " + OldValue]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <ui:IfElseIf sap2010:Annotation.AnnotationText="Depending on the result of the check, create a new record or do nothing." DisplayName="Else If" sap:VirtualizedContainerService.HintSize="1466,4606" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
        <ui:IfElseIf.ConditionBlocks>
          <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
            <ui:IfElseIfBlock BlockType="If" Condition="[NewValue &lt;&gt; OldValue]">
              <ui:IfElseIfBlock.Then>
                <Sequence sap2010:Annotation.AnnotationText="Delete all previous records for the product (if there are any), then create a new record" DisplayName="Body" sap:VirtualizedContainerService.HintSize="688,3945" sap2010:WorkflowViewState.IdRef="Sequence_81">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[NoExistingValue]" sap:VirtualizedContainerService.HintSize="626,784" sap2010:WorkflowViewState.IdRef="If_47">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,214" sap2010:WorkflowViewState.IdRef="Sequence_96">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage sap2010:Annotation.AnnotationText="&quot;Setting initial value...&quot;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Info" Message="[&quot;Setting initial value...&quot;]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="428,407" sap2010:WorkflowViewState.IdRef="Sequence_104">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage sap2010:Annotation.AnnotationText="&quot;Writing new value...&quot;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="366,92" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Info" Message="[&quot;Writing new value...&quot;]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Delete all previous records for the product first" DisplayName="Invoke Delete All Records workflow" sap:VirtualizedContainerService.HintSize="366,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="Change Monitor Process\Delete All Records.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_id">[Product]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_shop">[ShopName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_url">[ProductURL]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Else>
                  </If>
                  <If Condition="[NewValue &lt;&gt; &quot;ERROR&quot; and StockCheckMode = False]" DisplayName="Generate SortValue" sap:VirtualizedContainerService.HintSize="626,590" sap2010:WorkflowViewState.IdRef="If_41">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,327" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence DisplayName="Generate SortValue" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_87">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <c:Extract_Digits DisplayName="Extract Digits" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Extract_Digits_6" in_value="[NewValue]" out_value="[SortValue]" />
                            <If sap2010:Annotation.AnnotationText="If demonimated in £, multiply by 100 for pence" Condition="[NewValue.Contains(&quot;£&quot;)]" sap:VirtualizedContainerService.HintSize="484,278" sap2010:WorkflowViewState.IdRef="If_40">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[SortValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(cdbl(SortValue)*100).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_86">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                            <If sap2010:Annotation.AnnotationText="If price per unit is per litre then divide by 100 to make it per 100ml" Condition="[NewValue.Contains(&quot;litre&quot;) or NewValue.Contains(&quot;ltr&quot;)]" sap:VirtualizedContainerService.HintSize="484,278" sap2010:WorkflowViewState.IdRef="If_48">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[SortValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(cdbl(SortValue)/10).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_105">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Assign sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_27">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[SortValue]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">0</InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_88">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Set New Monitor Value workflow" sap:VirtualizedContainerService.HintSize="626,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="Change Monitor Process\Set New Monitor Value.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_value">[NewValue]</InArgument>
                      <OutArgument x:TypeArguments="c1:cmh" x:Key="out_record">[NewRecord]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_shop">[ShopName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_variant">[ProductVariant]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_sortvalue">[SortValue]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_product">[Product]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_url">[URL]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <If Condition="[ScreenshotFilepath isnot Nothing]" DisplayName="Attach Screenshot to DB Record" sap:VirtualizedContainerService.HintSize="626,416" sap2010:WorkflowViewState.IdRef="If_42">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Attach screenshot" DisplayName="Invoke Attach Screenshot workflow" sap:VirtualizedContainerService.HintSize="367,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="Change Monitor Process\Attach Screenshot.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ScreenshotFilepath">[ScreenshotFilepath]</InArgument>
                          <InArgument x:TypeArguments="c1:cmh" x:Key="in_Record">[NewRecord]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_89">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <If sap2010:Annotation.AnnotationText="Send notification depending on whether the check is a Price Check or a Stock Check" Condition="[StockCheckMode]" sap:VirtualizedContainerService.HintSize="626,1720" sap2010:WorkflowViewState.IdRef="If_45">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap2010:Annotation.AnnotationText="Send stock check notification" DisplayName="Stock Checking Mode" sap:VirtualizedContainerService.HintSize="441,580" sap2010:WorkflowViewState.IdRef="Sequence_91">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="If NewValue is ERROR it means that the &quot;Out of Stock&quot; message has disappeared, so set NewValue to &quot;In Stock&quot;" Condition="[NewValue = &quot;ERROR&quot;]" sap:VirtualizedContainerService.HintSize="379,133" sap2010:WorkflowViewState.IdRef="If_43">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[NewValue]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">In Stock</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_90">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Info" Message="[&quot;Sending to Stock Check Alerts pushover app&quot;]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Send notification to &quot;Stock Check Alerts&quot; Pushover app" DisplayName="Invoke Send Push Notification workflow" sap:VirtualizedContainerService.HintSize="379,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="Change Monitor Process\Send Push Notification.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_apikey">[PushoverAPIKey]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_userkey">[PushoverUserKey]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_message">[NewValue]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_title">[Product + Environment.NewLine + "(" + ShopName + ")"]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_attachment">[ScreenshotFilepath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_url">[URL]</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_disable">[DisablePushNotifications]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_Response">[PushNotificationResponse]</OutArgument>
                            <OutArgument x:TypeArguments="x:Int32" x:Key="out_ResponseStatus">[PushNotificationResponseStatus]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <If sap2010:Annotation.AnnotationText="Send price check notification" Condition="[NewValue = &quot;ERROR&quot;]" DisplayName="Price Checking Mode" sap:VirtualizedContainerService.HintSize="523,946" sap2010:WorkflowViewState.IdRef="If_44">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Send Error Notification" sap:VirtualizedContainerService.HintSize="441,376" sap2010:WorkflowViewState.IdRef="Sequence_92">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Info" Message="[&quot;Sending to Price Alerts Errors pushover app&quot;]" />
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Send notification to &quot;Price Alerts Errors&quot; Pushover app" DisplayName="Invoke Send Push Notification workflow" sap:VirtualizedContainerService.HintSize="379,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="Change Monitor Process\Send Push Notification.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_apikey">[PushoverErrorAPIKey]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_userkey">[PushoverUserKey]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_message">[PushNotificationMessage]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_title">[PushNotificationErrorTitle]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_attachment">[ScreenshotFilepath]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_url">[URL]</InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_disable">[DisablePushNotifications]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Response">[PushNotificationResponse]</OutArgument>
                                <OutArgument x:TypeArguments="x:Int32" x:Key="out_ResponseStatus">[PushNotificationResponseStatus]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Send Price Update Notification" sap:VirtualizedContainerService.HintSize="441,376" sap2010:WorkflowViewState.IdRef="Sequence_93">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Info" Message="[&quot;Sending to Price Alerts pushover app&quot;]" />
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Send notification to &quot;Price Alerts&quot; Pushover app" DisplayName="Invoke Send Push Notification workflow" sap:VirtualizedContainerService.HintSize="379,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="Change Monitor Process\Send Push Notification.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_apikey">[PushoverAPIKey]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_userkey">[PushoverUserKey]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_message">[PushNotificationMessage]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_title">[PushNotificationTitle]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_attachment">[ScreenshotFilepath]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_url">[URL]</InArgument>
                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_disable">[DisablePushNotifications]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Response">[PushNotificationResponse]</OutArgument>
                                <OutArgument x:TypeArguments="x:Int32" x:Key="out_ResponseStatus">[PushNotificationResponseStatus]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
            <ui:IfElseIfBlock BlockType="ElseIf" Condition="[NewValue = OldValue]">
              <ui:IfElseIfBlock.Then>
                <Sequence sap2010:Annotation.AnnotationText="Do nothing." DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,301" sap2010:WorkflowViewState.IdRef="Sequence_72">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,148" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Info" Message="[&quot;No changes&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
          </sc:BindingList>
        </ui:IfElseIf.ConditionBlocks>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:IfElseIf>
      <If sap2010:Annotation.AnnotationText="Clean up screenshot file if present" Condition="[ScreenshotFilepath isnot nothing]" DisplayName="If" sap:VirtualizedContainerService.HintSize="1466,394" sap2010:WorkflowViewState.IdRef="If_39">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="DeleteFileX_2" Path="[ScreenshotFilepath]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:DeleteFileX>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_82">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>